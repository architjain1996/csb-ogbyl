{"version":3,"sources":["App.js","index.js"],"names":["emojiDictionary","emojis","Object","keys","App","useState","setEmoji","meaning","setMeaning","className","style","padding","backgroundColor","textAlign","color","borderTopLeftRadius","borderBottomRightRadius","onChange","event","inputEmoji","target","value","map","emoji","fontSize","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sJAEMA,EAAkB,CACtB,eAAM,UACN,eAAM,YACN,eAAM,MACN,eAAM,cACN,eAAM,OACN,eAAM,aAGFC,EAASC,OAAOC,KAAKH,GAEZ,SAASI,IACtB,MAA0BC,mBAAS,IAAnC,mBAAcC,GAAd,WACA,EAA8BD,mBAAS,kCAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KAaA,OACE,sBAAKC,UAAU,MAAf,UACE,oBACEC,MAAO,CACLC,QAAS,OACTC,gBAAiB,UACjBC,UAAW,SACXC,MAAO,SACPC,oBAAqB,OACrBC,wBAAyB,QAP7B,+BAYA,uBAAOC,SAzBX,SAAuBC,GACrB,IAAMC,EAAaD,EAAME,OAAOC,MAChCf,EAASa,GAGPX,EADEW,KAAcnB,EACLA,EAAgBmB,GAEhB,oCAkBqBT,MAAO,CAAEC,QAAS,WAClD,uBACA,uBACA,uBACA,uBACA,uBACA,oCAAOJ,EAAP,OACA,uBACA,uBACCN,EAAOqB,KAAI,SAACC,GAAD,OACV,uBAAMb,MAAO,CAAEc,SAAU,QAAzB,cAAqCD,EAArC,aC/CR,IAAME,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACzB,EAAD,MAEFqB,I","file":"static/js/main.25b44840.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\nconst emojiDictionary = {\n  \"üòä\": \"Smiling\",\n  \"üò≥\": \"disbelief\",\n  \"üòî\": \"sad\",\n  \"ü•°\": \"takeout box\",\n  \"‚ù§Ô∏è\": \"love\",\n  \"üòë\": \"annoyance\"\n};\n\nconst emojis = Object.keys(emojiDictionary);\n\nexport default function App() {\n  const [emoji, setEmoji] = useState(\"\"); /** concept 2 is useState */\n  const [meaning, setMeaning] = useState(\"translation will appear here..\");\n\n  function changeHandler(event) {\n    const inputEmoji = event.target.value;\n    setEmoji(inputEmoji);\n\n    if (inputEmoji in emojiDictionary) {\n      setMeaning(emojiDictionary[inputEmoji]);\n    } else {\n      setMeaning(\"failure to recognise this emoji\");\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1\n        style={{\n          padding: \"2rem\",\n          backgroundColor: \"#FFD200\",\n          textAlign: \"center\",\n          color: \"yellow\",\n          borderTopLeftRadius: \"2rem\",\n          borderBottomRightRadius: \"2rem\"\n        }}\n      >\n        Emoji Interpreter\n      </h1>\n      <input onChange={changeHandler} style={{ padding: \"1.2em\" }} />\n      <br />\n      <br />\n      <hr />\n      <br />\n      <br />\n      <div> {meaning} </div>\n      <br />\n      <br />\n      {emojis.map((emoji) => (\n        <span style={{ fontSize: \"2rem\" }}> {emoji} </span>\n      ))}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}